<list>
  <ProcessDefinition>
    <processDefinitionPK>
      <companyId>1</companyId>
      <processId>wf_lancamento_descontos_funcionario</processId>
    </processDefinitionPK>
    <processDescription>Lançamento de Descontos por Funcionário</processDescription>
    <instruction></instruction>
    <active>true</active>
    <publicProcess>false</publicProcess>
    <volumeId>Default</volumeId>
    <categoryId>Departamento Pessoal</categoryId>
    <managerEngineAllocationId></managerEngineAllocationId>
    <snapshotFrequency>0</snapshotFrequency>
    <baseDay>0</baseDay>
    <baseMonth>0</baseMonth>
    <periodId>Default</periodId>
    <uniqueCardVersion>false</uniqueCardVersion>
    <keyWord></keyWord>
    <complementsLevel>1</complementsLevel>
    <notifyRequisitionerComplements>true</notifyRequisitionerComplements>
    <notifyManagerComplements>false</notifyManagerComplements>
    <deadlineTime>0</deadlineTime>
    <warningDeadlineTime>0</warningDeadlineTime>
    <notifyAuthorityComplements>true</notifyAuthorityComplements>
  </ProcessDefinition>
  <ProcessDefinitionVersion>
    <processDefinitionVersionPK>
      <companyId>1</companyId>
      <processId>Lançamento de Descontos por Funcionário</processId>
      <version>12</version>
    </processDefinitionVersionPK>
    <versionDescription></versionDescription>
    <formId>340891</formId>
    <editionMode>true</editionMode>
    <updateAttachmentsVersion>false</updateAttachmentsVersion>
    <controlsAttachmentsSecurity>false</controlsAttachmentsSecurity>
    <active>true</active>
    <blockedVersion>false</blockedVersion>
    <counterSign>false</counterSign>
    <openInstances>0</openInstances>
    <bpmnVersion>2</bpmnVersion>
    <processStates/>
    <favorito>false</favorito>
    <inheritFormSecurity>false</inheritFormSecurity>
    <mobileReady>false</mobileReady>
  </ProcessDefinitionVersion>
  <list>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <sequence>4</sequence>
      </processStatePK>
      <stateName>Início</stateName>
      <stateDescription>Início</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>true</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>90</positionX>
      <positionY>140</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>10</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <sequence>9</sequence>
      </processStatePK>
      <stateName>Integração Protheus</stateName>
      <stateDescription>Integração Protheus</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>220</positionX>
      <positionY>123</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <sequence>15</sequence>
      </processStatePK>
      <stateName>Erro Integração</stateName>
      <stateDescription>Erro Integração</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Papel</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Role&gt;DESCONTOS_FUNCIONARIO_ERRO_INTEGRACAO&lt;/Role&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>220</positionX>
      <positionY>230</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <sequence>14</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>310</positionX>
      <positionY>163</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>9</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <sequence>18</sequence>
      </processStatePK>
      <stateName>Exclusivo</stateName>
      <stateDescription>Exclusivo</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>460</positionX>
      <positionY>107</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <sequence>10</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>660</positionX>
      <positionY>140</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
  </list>
  <list>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <expressionOrder>1</expressionOrder>
        <version>12</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>10</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <expressionOrder>2</expressionOrder>
        <version>12</version>
        <sequence>18</sequence>
      </conditionProcessStatePK>
      <condition></condition>
      <destinationSequenceId>15</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
  </list>
  <list>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <linkSequence>12</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>4</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <linkSequence>16</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>14</initialStateSequence>
      <finalStateSequence>15</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <linkSequence>17</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>15</initialStateSequence>
      <finalStateSequence>9</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <linkSequence>19</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>9</initialStateSequence>
      <finalStateSequence>18</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <linkSequence>20</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>10</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <linkSequence>21</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>15</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
  </list>
  <list/>
  <list>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterProcessCreate</eventId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterProcessCreate(processId){&#xd;
	hAPI.setCardValue(&apos;solicitacao_fluig&apos;, processId);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask9</eventId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask9(attempt, message) {
    try {
        log.info(&apos;INTEGRAÇÃO PROTHEUS - Lançamento de Descontos - servicetask9&apos;);

        // ---------- Coleta de campos ----------
        var codFilial = (hAPI.getCardValue(&apos;codFilial&apos;) + &apos;&apos;).trim();
        var empresa = obterEmpresa(codFilial);
        var matricula = (hAPI.getCardValue(&apos;matriculaColaborador&apos;) + &apos;&apos;).trim();
        var roteiro = valorOuPadrao(hAPI.getCardValue(&apos;roteiro&apos;), &apos;FOL&apos;);
        var numpagto = valorOuPadrao(hAPI.getCardValue(&apos;numpagto&apos;), &apos;01&apos;);
        var codVerba = (hAPI.getCardValue(&apos;codVerba&apos;) + &apos;&apos;).trim();
        var tipo1 = &apos;D&apos;; // desconto
        var periodoForm = (hAPI.getCardValue(&apos;periodoAtual&apos;) + &apos;&apos;).trim(); // espelho do período atual exibido
        var parcelas = parseParcelas((hAPI.getCardValue(&apos;parcelas_json&apos;) + &apos;&apos;).trim());

        if (!parcelas || parcelas.length === 0) {
            throw new Error(&apos;Não há parcelas a enviar.&apos;);
        }

        // ---------- Divide em &quot;aberto&quot; (primeira parcela) e &quot;futuras&quot; (demais) ----------
        var primeiraParcela = parcelas[0];
        // periodoRef do aberto = período da primeira parcela; se vazio, tenta do form
        var periodoRefAberto = (primeiraParcela &amp;&amp; primeiraParcela.periodo) ? (primeiraParcela.periodo + &apos;&apos;).trim() : (periodoForm || &apos;&apos;);
        if (!periodoRefAberto) {
            throw new Error(&apos;Período da primeira parcela não informado.&apos;);
        }

        var payloadAberto = {
            empresa: empresa,
            filial: codFilial,
            matricula: matricula,
            roteiro: roteiro,
            numpagto: numpagto,
            periodoRef: periodoRefAberto,
            verba: codVerba,
            tipo1: tipo1,
            parcelas: [primeiraParcela] // apenas 1
        };

        // Futuras = todas as parcelas cujo período seja diferente do aberto (e valor &gt; 0)
        var restantes = [];
        for (var i = 1; i &lt; parcelas.length; i++) {
            var p = parcelas[i] || {};
            var per = (p.periodo + &apos;&apos;).trim();
            var val = parseMoney(p.valor);
            if (per &amp;&amp; isFinite(val) &amp;&amp; val &gt; 0 &amp;&amp; per !== periodoRefAberto) {
                restantes.push({ periodo: per, valor: Number(val.toFixed(2)) });
            }
        }

        var payloadFuturo = null;
        if (restantes.length &gt; 0) {
            payloadFuturo = {
                empresa: empresa,
                filial: codFilial,
                matricula: matricula,
                periodoRef: periodoRefAberto, // usado pelo serviço para filtrar e excluir o período aberto
                verba: codVerba,
                // documento é opcional; se quiser, pode usar o número do processo:
                documento: (getValue(&apos;WKNumProces&apos;) + &apos;&apos;),
                parcelas: restantes
            };
        }

        // ---------- Idempotência: checa se já integrou com sucesso ----------
        // Campos de status e payload salvos no formulário
        var stAberto = (hAPI.getCardValue(&apos;integ_aberto_status&apos;) + &apos;&apos;).trim();   // &quot;OK&quot; | &quot;NOK&quot; | &quot;&quot;
        var stFuturo = (hAPI.getCardValue(&apos;integ_futuro_status&apos;) + &apos;&apos;).trim();   // &quot;OK&quot; | &quot;NOK&quot; | &quot;&quot;
        var plAbertoS = (hAPI.getCardValue(&apos;integ_aberto_payload&apos;) + &apos;&apos;);         // json string
        var plFuturoS = (hAPI.getCardValue(&apos;integ_futuro_payload&apos;) + &apos;&apos;);         // json string

        var plAbertoNow = safeJSONStringify(payloadAberto);
        var plFuturoNow = payloadFuturo ? safeJSONStringify(payloadFuturo) : &apos;&apos;;

        // Não reenvia se já deu OK anteriormente com qualquer payload.
        // Se quiser reprocessar quando payload mudou, troque a lógica conforme sua política.
        var deveEnviarAberto = (stAberto !== &apos;OK&apos;);
        var deveEnviarFuturo = (!!payloadFuturo &amp;&amp; stFuturo !== &apos;OK&apos;);

        // ---------- Envia abertas ----------
        var okAberto = false;
        var msgAberto = &apos;&apos;;
        if (deveEnviarAberto) {
            var r1 = integracaoProtheusInvoke(&apos;/rest/RESTRH/postDescontos&apos;, payloadAberto);
            okAberto = r1.ok;
            msgAberto = r1.msg;
            hAPI.setCardValue(&apos;integ_aberto_status&apos;, okAberto ? &apos;OK&apos; : &apos;NOK&apos;);
            hAPI.setCardValue(&apos;integ_aberto_msg&apos;, msgAberto);
            hAPI.setCardValue(&apos;integ_aberto_payload&apos;, plAbertoNow);

            if (okAberto) {
                hAPI.setTaskComments(getValue(&apos;WKUser&apos;), getValue(&apos;WKNumProces&apos;), 0, &apos;Aberto (GPEA580): OK. &apos; + (msgAberto || &apos;&apos;));
            } else {
                hAPI.setTaskComments(getValue(&apos;WKUser&apos;), getValue(&apos;WKNumProces&apos;), 0, &apos;Aberto (GPEA580): FALHA. &apos; + (msgAberto || &apos;&apos;));
            }
        } else {
            log.info(&apos;servicetask9: Aberto já OK anteriormente. Não reenviado.&apos;);
        }

        // ---------- Envia futuras ----------
        var okFuturo = false;
        var msgFuturo = &apos;&apos;;
        if (deveEnviarFuturo) {
            var r2 = integracaoProtheusInvoke(&apos;/rest/RESTRH/descontosFuturos&apos;, payloadFuturo);
            okFuturo = r2.ok;
            msgFuturo = r2.msg;
            hAPI.setCardValue(&apos;integ_futuro_status&apos;, okFuturo ? &apos;OK&apos; : &apos;NOK&apos;);
            hAPI.setCardValue(&apos;integ_futuro_msg&apos;, msgFuturo);
            hAPI.setCardValue(&apos;integ_futuro_payload&apos;, plFuturoNow);

            if (okFuturo) {
                hAPI.setTaskComments(getValue(&apos;WKUser&apos;), getValue(&apos;WKNumProces&apos;), 0, &apos;Futuro (GPEA110): OK. &apos; + (msgFuturo || &apos;&apos;));
            } else {
                hAPI.setTaskComments(getValue(&apos;WKUser&apos;), getValue(&apos;WKNumProces&apos;), 0, &apos;Futuro (GPEA110): FALHA. &apos; + (msgFuturo || &apos;&apos;));
            }
        } else if (payloadFuturo) {
            log.info(&apos;servicetask9: Futuro já OK anteriormente. Não reenviado.&apos;);
        } else {
            log.info(&apos;servicetask9: Não há parcelas futuras para enviar.&apos;);
        }

        // ---------- Status geral ----------
        // Se existir parcelas futuras, considera OK somente se ambos OK.
        // Se não existir, considera OK apenas se aberto OK.
        var statusGeralOK = false;
        if (payloadFuturo) {
            statusGeralOK = ((stAberto === &apos;OK&apos; || okAberto) &amp;&amp; (stFuturo === &apos;OK&apos; || okFuturo));
        } else {
            statusGeralOK = (stAberto === &apos;OK&apos; || okAberto);
        }
        hAPI.setCardValue(&apos;statusIntegracao&apos;, statusGeralOK ? &apos;OK&apos; : &apos;NOK&apos;);

    } catch (error) {
        hAPI.setCardValue(&apos;statusIntegracao&apos;, &apos;NOK&apos;);
        log.warn(&apos;servicetask9 error: &apos; + error);
        log.warn(&apos;servicetask9 error.message: &apos; + error.message);
        log.warn(&apos;servicetask9 error.lineNumber: &apos; + error.lineNumber);
        hAPI.setTaskComments(getValue(&apos;WKUser&apos;), getValue(&apos;WKNumProces&apos;), 0, &apos;Erro na integração: &apos; + error.message);
    }
}

/* =========================================================
 * Chamada REST centralizada (idempotência controlada por campos)
 * ========================================================= */
function integracaoProtheusInvoke(endpointPath, jsonData) {
    var result = { ok: false, msg: &apos;&apos; };
    try {
        log.info(&apos;servicetask9 → POST &apos; + endpointPath);
        log.dir(jsonData);

        var clientService = fluigAPI.getAuthorizeClientService();
        var envName = (fluigAPI.getTenantService().getTenantData([&apos;envName&apos;]).get(&apos;envName&apos;) + &apos;&apos;).trim();
        var serviceCodeName = resolveServiceCode(envName);

        var data = {
            companyId: String(fluigAPI.getSecurityService().getCurrentTenantId()),
            serviceCode: serviceCodeName,
            endpoint: endpointPath,
            method: &apos;POST&apos;,
            timeoutService: &apos;1000&apos;,
            params: jsonData,
            options: {
                encoding: &apos;UTF-8&apos;,
                mediaType: &apos;application/json&apos;,
                useSSL: true
            }
        };

        var response = clientService.invoke(JSON.stringify(data));
        log.info(&apos;servicetask9 response raw: &apos; + response);

        var resultStr = response &amp;&amp; response.getResult ? response.getResult() : &apos;&apos;;
        log.info(&apos;servicetask9 response.getResult(): &apos; + resultStr);

        var parsed = {};
        if (resultStr) {
            try { parsed = JSON.parse(resultStr); } catch (e) { parsed = {}; }
        }

        var ok = parsed &amp;&amp; parsed.status === &apos;success&apos;;
        result.ok = ok;
        result.msg = parsed &amp;&amp; parsed.msg ? parsed.msg : (ok ? &apos;OK&apos; : &apos;Falha ao integrar.&apos;);

        return result;
    } catch (e) {
        log.warn(&apos;integracaoProtheusInvoke error: &apos; + e.message);
        result.ok = false;
        result.msg = e.message || &apos;Erro inesperado.&apos;;
        return result;
    }
}

/* =========================================================
 * Helpers ES5
 * ========================================================= */

function resolveServiceCode(envName) {
    if (envName === &apos;PRODUCAO&apos;) return &apos;API_RESTRH&apos;;
    if (envName === &apos;TESTE&apos;) return &apos;REST_PROTHEUS_TST&apos;;
    return &apos;API_RESTRH&apos;;
}

function valorOuPadrao(v, def) {
    v = (v === null || v === undefined) ? &apos;&apos; : (v + &apos;&apos;);
    v = v.trim();
    return v ? v : def;
}

function obterEmpresa(cFilial) {
    cFilial = (cFilial || &apos;&apos;) + &apos;&apos;;
    if (cFilial.length &gt;= 2) return cFilial.substring(0, 2);
    return &apos;01&apos;;
}

// Converte dinheiro/strings PT-BR &quot;1.234,56&quot; para Number 1234.56
function parseMoney(v) {
    if (v === null || v === undefined) return 0;
    if (typeof v === &apos;number&apos;) return isFinite(v) ? v : 0;
    var s = (v + &apos;&apos;).trim();
    if (!s) return 0;
    s = s.replace(/[^\d.,-]/g, &apos;&apos;); // mantém dígito, ponto, vírgula e sinal
    var hasComma = s.indexOf(&apos;,&apos;) !== -1;
    var hasDot = s.indexOf(&apos;.&apos;) !== -1;
    if (hasComma &amp;&amp; hasDot) {
        s = s.replace(/\./g, &apos;&apos;).replace(&apos;,&apos;, &apos;.&apos;);
    } else if (hasComma &amp;&amp; !hasDot) {
        s = s.replace(&apos;,&apos;, &apos;.&apos;);
    }
    var n = Number(s);
    return isFinite(n) ? n : 0;
}

function parseParcelas(jsonStr) {
    var arr = [];
    if (!jsonStr) return arr;
    try {
        var tmp = JSON.parse(jsonStr);
        if (Object.prototype.toString.call(tmp) === &apos;[object Array]&apos;) {
            for (var i = 0; i &lt; tmp.length; i++) {
                var p = tmp[i] || {};
                var periodo = (((p.periodo === null || p.periodo === undefined) ? &apos;&apos; : p.periodo) + &apos;&apos;).trim();
                var v = parseMoney(p.valor);
                if (periodo &amp;&amp; isFinite(v) &amp;&amp; v &gt; 0) {
                    arr.push({ periodo: periodo, valor: Number(v.toFixed(2)) });
                }
            }
        }
    } catch (e) {
        log.warn(&apos;parseParcelas: JSON inválido. value=&apos; + jsonStr);
    }
    return arr;
}

function safeJSONStringify(obj) {
    try { return JSON.stringify(obj); } catch (e) { return &apos;&apos;; }
}
</eventDescription>
    </WorkflowProcessEvent>
  </list>
  <list/>
  <list>
    <SwimLane>
      <color>FFFFFF</color>
      <height>290</height>
      <width>831</width>
      <positionX>10</positionX>
      <positionY>10</positionY>
      <stateName>Processo</stateName>
      <type>1</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <sequence>1</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>9F9F9F</color>
      <height>290</height>
      <width>801</width>
      <positionX>40</positionX>
      <positionY>10</positionY>
      <stateName>Lançamento de Descontos</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <sequence>2</sequence>
      </swimLanePK>
    </SwimLane>
  </list>
  <list>
    <ProcessComponGraf>
      <componType>1</componType>
      <positionX>55</positionX>
      <positionY>20</positionY>
      <processComponGrafPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <componGrafSequence>7</componGrafSequence>
      </processComponGrafPK>
      <stateName>Início Processo</stateName>
    </ProcessComponGraf>
  </list>
  <list>
    <ProcessLinkAssoc>
      <processLinkAssocPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <version>1</version>
        <linkSequence>13</linkSequence>
      </processLinkAssocPK>
      <initialStateSequence>7</initialStateSequence>
      <finalStateSequence>4</finalStateSequence>
    </ProcessLinkAssoc>
  </list>
  <list/>
  <list/>
  <list/>
  <list>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <fieldId>statusIntegracao</fieldId>
      </processFormFieldPK>
      <fieldDescription>statusIntegracao</fieldDescription>
      <slotId>1</slotId>
    </ProcessFormField>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <fieldId>solicitacao_fluig</fieldId>
      </processFormFieldPK>
      <fieldDescription>solicitacao_fluig</fieldDescription>
      <slotId>2</slotId>
    </ProcessFormField>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <fieldId>dataSolicitacao</fieldId>
      </processFormFieldPK>
      <fieldDescription>dataSolicitacao</fieldDescription>
      <slotId>3</slotId>
    </ProcessFormField>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <fieldId>horaSolicitacao</fieldId>
      </processFormFieldPK>
      <fieldDescription>horaSolicitacao</fieldDescription>
      <slotId>4</slotId>
    </ProcessFormField>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>wf_lancamento_descontos_funcionario</processId>
        <fieldId>nomeSolicitante</fieldId>
      </processFormFieldPK>
      <fieldDescription>nomeSolicitante</fieldDescription>
      <slotId>5</slotId>
    </ProcessFormField>
  </list>
  <list>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>wf_lancamento_descontos_funcionario</processId>
      <version>1</version>
      <sequence>9</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
  </list>
  <list/>
  <list/>
  <list/>
  <list>
    <ConditionProcessAutomaticRules>
      <sequence>18</sequence>
      <expressionOrder>1</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>statusIntegracao</field>
      <value>OK</value>
      <operator>1</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>18</sequence>
      <expressionOrder>2</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>statusIntegracao</field>
      <value>OK</value>
      <operator>2</operator>
      <valueType>1</valueType>
    </ConditionProcessAutomaticRules>
  </list>
</list>